// Code generated by protoc-gen-go.
// source: supervisor.proto
// DO NOT EDIT!

/*
Package generated is a generated protocol buffer package.

It is generated from these files:
	supervisor.proto

It has these top-level messages:
	BootstrapRequest
	BootstrapResponse
	LeaveRequest
	LeaveResponse
	JoinRequest
	JoinResponse
	UpgradeRequest
	UpgradeResponse
	SubjugateRequest
	SubjugateResponse
*/
package generated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BootstrapRequest struct {
	DiscoveryUrl string `protobuf:"bytes,1,opt,name=discovery_url,json=discoveryUrl" json:"discovery_url,omitempty"`
}

func (m *BootstrapRequest) Reset()                    { *m = BootstrapRequest{} }
func (m *BootstrapRequest) String() string            { return proto.CompactTextString(m) }
func (*BootstrapRequest) ProtoMessage()               {}
func (*BootstrapRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BootstrapRequest) GetDiscoveryUrl() string {
	if m != nil {
		return m.DiscoveryUrl
	}
	return ""
}

type BootstrapResponse struct {
}

func (m *BootstrapResponse) Reset()                    { *m = BootstrapResponse{} }
func (m *BootstrapResponse) String() string            { return proto.CompactTextString(m) }
func (*BootstrapResponse) ProtoMessage()               {}
func (*BootstrapResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type LeaveRequest struct {
}

func (m *LeaveRequest) Reset()                    { *m = LeaveRequest{} }
func (m *LeaveRequest) String() string            { return proto.CompactTextString(m) }
func (*LeaveRequest) ProtoMessage()               {}
func (*LeaveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type LeaveResponse struct {
}

func (m *LeaveResponse) Reset()                    { *m = LeaveResponse{} }
func (m *LeaveResponse) String() string            { return proto.CompactTextString(m) }
func (*LeaveResponse) ProtoMessage()               {}
func (*LeaveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type JoinRequest struct {
}

func (m *JoinRequest) Reset()                    { *m = JoinRequest{} }
func (m *JoinRequest) String() string            { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()               {}
func (*JoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type JoinResponse struct {
}

func (m *JoinResponse) Reset()                    { *m = JoinResponse{} }
func (m *JoinResponse) String() string            { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()               {}
func (*JoinResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type UpgradeRequest struct {
}

func (m *UpgradeRequest) Reset()                    { *m = UpgradeRequest{} }
func (m *UpgradeRequest) String() string            { return proto.CompactTextString(m) }
func (*UpgradeRequest) ProtoMessage()               {}
func (*UpgradeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type UpgradeResponse struct {
}

func (m *UpgradeResponse) Reset()                    { *m = UpgradeResponse{} }
func (m *UpgradeResponse) String() string            { return proto.CompactTextString(m) }
func (*UpgradeResponse) ProtoMessage()               {}
func (*UpgradeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type SubjugateRequest struct {
}

func (m *SubjugateRequest) Reset()                    { *m = SubjugateRequest{} }
func (m *SubjugateRequest) String() string            { return proto.CompactTextString(m) }
func (*SubjugateRequest) ProtoMessage()               {}
func (*SubjugateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type SubjugateResponse struct {
}

func (m *SubjugateResponse) Reset()                    { *m = SubjugateResponse{} }
func (m *SubjugateResponse) String() string            { return proto.CompactTextString(m) }
func (*SubjugateResponse) ProtoMessage()               {}
func (*SubjugateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func init() {
	proto.RegisterType((*BootstrapRequest)(nil), "generated.BootstrapRequest")
	proto.RegisterType((*BootstrapResponse)(nil), "generated.BootstrapResponse")
	proto.RegisterType((*LeaveRequest)(nil), "generated.LeaveRequest")
	proto.RegisterType((*LeaveResponse)(nil), "generated.LeaveResponse")
	proto.RegisterType((*JoinRequest)(nil), "generated.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "generated.JoinResponse")
	proto.RegisterType((*UpgradeRequest)(nil), "generated.UpgradeRequest")
	proto.RegisterType((*UpgradeResponse)(nil), "generated.UpgradeResponse")
	proto.RegisterType((*SubjugateRequest)(nil), "generated.SubjugateRequest")
	proto.RegisterType((*SubjugateResponse)(nil), "generated.SubjugateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SupervisorService service

type SupervisorServiceClient interface {
	Bootstrap(ctx context.Context, in *BootstrapRequest, opts ...grpc.CallOption) (*BootstrapResponse, error)
	Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*LeaveResponse, error)
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	Upgrade(ctx context.Context, in *UpgradeRequest, opts ...grpc.CallOption) (*UpgradeResponse, error)
	Subjugate(ctx context.Context, in *SubjugateRequest, opts ...grpc.CallOption) (*SubjugateResponse, error)
}

type supervisorServiceClient struct {
	cc *grpc.ClientConn
}

func NewSupervisorServiceClient(cc *grpc.ClientConn) SupervisorServiceClient {
	return &supervisorServiceClient{cc}
}

func (c *supervisorServiceClient) Bootstrap(ctx context.Context, in *BootstrapRequest, opts ...grpc.CallOption) (*BootstrapResponse, error) {
	out := new(BootstrapResponse)
	err := grpc.Invoke(ctx, "/generated.SupervisorService/Bootstrap", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supervisorServiceClient) Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*LeaveResponse, error) {
	out := new(LeaveResponse)
	err := grpc.Invoke(ctx, "/generated.SupervisorService/Leave", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supervisorServiceClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := grpc.Invoke(ctx, "/generated.SupervisorService/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supervisorServiceClient) Upgrade(ctx context.Context, in *UpgradeRequest, opts ...grpc.CallOption) (*UpgradeResponse, error) {
	out := new(UpgradeResponse)
	err := grpc.Invoke(ctx, "/generated.SupervisorService/Upgrade", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supervisorServiceClient) Subjugate(ctx context.Context, in *SubjugateRequest, opts ...grpc.CallOption) (*SubjugateResponse, error) {
	out := new(SubjugateResponse)
	err := grpc.Invoke(ctx, "/generated.SupervisorService/Subjugate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SupervisorService service

type SupervisorServiceServer interface {
	Bootstrap(context.Context, *BootstrapRequest) (*BootstrapResponse, error)
	Leave(context.Context, *LeaveRequest) (*LeaveResponse, error)
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	Upgrade(context.Context, *UpgradeRequest) (*UpgradeResponse, error)
	Subjugate(context.Context, *SubjugateRequest) (*SubjugateResponse, error)
}

func RegisterSupervisorServiceServer(s *grpc.Server, srv SupervisorServiceServer) {
	s.RegisterService(&_SupervisorService_serviceDesc, srv)
}

func _SupervisorService_Bootstrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BootstrapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorServiceServer).Bootstrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.SupervisorService/Bootstrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorServiceServer).Bootstrap(ctx, req.(*BootstrapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupervisorService_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorServiceServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.SupervisorService/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorServiceServer).Leave(ctx, req.(*LeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupervisorService_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorServiceServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.SupervisorService/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorServiceServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupervisorService_Upgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorServiceServer).Upgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.SupervisorService/Upgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorServiceServer).Upgrade(ctx, req.(*UpgradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupervisorService_Subjugate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubjugateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorServiceServer).Subjugate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.SupervisorService/Subjugate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorServiceServer).Subjugate(ctx, req.(*SubjugateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SupervisorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "generated.SupervisorService",
	HandlerType: (*SupervisorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Bootstrap",
			Handler:    _SupervisorService_Bootstrap_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _SupervisorService_Leave_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _SupervisorService_Join_Handler,
		},
		{
			MethodName: "Upgrade",
			Handler:    _SupervisorService_Upgrade_Handler,
		},
		{
			MethodName: "Subjugate",
			Handler:    _SupervisorService_Subjugate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "supervisor.proto",
}

func init() { proto.RegisterFile("supervisor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xa9, 0xf8, 0x87, 0x8c, 0x49, 0x9a, 0x6c, 0xc1, 0xd6, 0xd5, 0x83, 0xc4, 0x8b, 0xa7,
	0x1c, 0xf4, 0x50, 0xf0, 0x24, 0x1e, 0x7a, 0x10, 0x4f, 0x2d, 0x3d, 0xcb, 0xb6, 0x19, 0x42, 0xa4,
	0x64, 0xd7, 0xfd, 0x13, 0xf0, 0xab, 0xfa, 0x69, 0x24, 0xcd, 0x76, 0xd9, 0x34, 0x3d, 0x85, 0x79,
	0xef, 0xcd, 0x90, 0xf7, 0x63, 0x21, 0x51, 0x46, 0xa0, 0x6c, 0x2a, 0xc5, 0x65, 0x2e, 0x24, 0xd7,
	0x9c, 0x04, 0x25, 0xd6, 0x28, 0x99, 0xc6, 0x22, 0x9b, 0x43, 0xf2, 0xce, 0xb9, 0x56, 0x5a, 0x32,
	0xb1, 0xc4, 0x1f, 0x83, 0x4a, 0x93, 0x47, 0x88, 0x8a, 0x4a, 0x6d, 0x79, 0x83, 0xf2, 0xf7, 0xcb,
	0xc8, 0xdd, 0x6c, 0xf4, 0x30, 0x7a, 0x0a, 0x96, 0xa1, 0x13, 0xd7, 0x72, 0x97, 0x4d, 0x20, 0xf5,
	0x16, 0x95, 0xe0, 0xb5, 0xc2, 0x2c, 0x86, 0xf0, 0x13, 0x59, 0x83, 0xf6, 0x52, 0x36, 0x86, 0xc8,
	0xce, 0x36, 0x10, 0xc1, 0xf5, 0x07, 0xaf, 0xea, 0x83, 0x1f, 0x43, 0xd8, 0x8d, 0xd6, 0x4e, 0x20,
	0x5e, 0x8b, 0x52, 0xb2, 0xc2, 0x5d, 0x48, 0x61, 0xec, 0x14, 0x1b, 0x22, 0x90, 0xac, 0xcc, 0xe6,
	0xdb, 0x94, 0x4c, 0xbb, 0xd8, 0x04, 0x52, 0x4f, 0xeb, 0x82, 0xcf, 0x7f, 0x67, 0xad, 0x7a, 0xe8,
	0xbe, 0x6a, 0xbf, 0x5b, 0x24, 0x0b, 0x08, 0xdc, 0x8f, 0x93, 0xbb, 0xdc, 0xa1, 0xc8, 0x8f, 0x39,
	0xd0, 0xfb, 0xd3, 0x66, 0x77, 0x9d, 0xbc, 0xc2, 0xc5, 0xbe, 0x1b, 0x99, 0x7a, 0x31, 0xbf, 0x3d,
	0x9d, 0x0d, 0x0d, 0xbb, 0x3b, 0x87, 0xf3, 0xb6, 0x37, 0xb9, 0xf1, 0x12, 0x1e, 0x17, 0x3a, 0x1d,
	0xe8, 0x76, 0xf1, 0x0d, 0xae, 0x2c, 0x0e, 0x72, 0xeb, 0x65, 0xfa, 0xd0, 0x28, 0x3d, 0x65, 0xd9,
	0x0b, 0x0b, 0x08, 0x1c, 0xa9, 0x5e, 0xfd, 0x63, 0xa6, 0xbd, 0xfa, 0x03, 0xb8, 0x9b, 0xcb, 0xfd,
	0x53, 0x7a, 0xf9, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x6c, 0xb9, 0x9b, 0x09, 0x5e, 0x02, 0x00, 0x00,
}
